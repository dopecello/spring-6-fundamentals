"Note","Course","Module","Clip","Time in Clip","URL"
"`@Configuration` replaces the `applicationContext.xml` that is usually used without Spring.","Spring Framework 6 Fundamentals","Spring Configuration using Java","Demo: @Configuration","0:19","https://app.pluralsight.com/player?course=spring-framework-6-fundamentals&author=bryan-hansen&name=5b1f9727-b12a-4d0d-a058-5e7e04c8d9dc&clip=3&mode=live&start=19&noteid=1c019f66-e0c9-4056-acd0-b2ff237d9d73"
"What are Beans?
","Spring Framework 6 Fundamentals","Spring Configuration using Java","Demo: @Configuration","1:14","https://app.pluralsight.com/player?course=spring-framework-6-fundamentals&author=bryan-hansen&name=5b1f9727-b12a-4d0d-a058-5e7e04c8d9dc&clip=3&mode=live&start=74&noteid=007004a8-6518-4846-b07c-5df48726c534"
"`Beans` are a singleton by default and only execute first time method is called. Return one instance only
","Spring Framework 6 Fundamentals","Spring Configuration using Java","Demo: Setter Injection","2:06","https://app.pluralsight.com/player?course=spring-framework-6-fundamentals&author=bryan-hansen&name=5b1f9727-b12a-4d0d-a058-5e7e04c8d9dc&clip=5&mode=live&start=126&noteid=a488ab98-24f6-47d5-af12-f5d477a17c65"
"Setter injections are used, but constructor injection are known as the preferred approach when using Spring","Spring Framework 6 Fundamentals","Spring Configuration using Java","Constructor Injection","0:53","https://app.pluralsight.com/player?course=spring-framework-6-fundamentals&author=bryan-hansen&name=5b1f9727-b12a-4d0d-a058-5e7e04c8d9dc&clip=6&mode=live&start=53&noteid=189bb84e-89c0-4a36-8b94-888ab61a6bc3"
"Thread safety and thread contact stuff when having mulitple Spring containers is unnecessary. This is because the containers are inherintly thread safe because they don't collide.","Spring Framework 6 Fundamentals","Spring Scopes and Autowiring","Singleton Java Config","0:49","https://app.pluralsight.com/player?course=spring-framework-6-fundamentals&author=bryan-hansen&name=95e4c8f7-6a9d-4e9b-8cc0-bbb1ec502420&clip=2&mode=live&start=49&noteid=01991116-d222-48fc-b7e1-f1d6832361f9"
"If you want to define and force the scope of a method, instead of typing the definition in plaintext, you can use the `BeanDefinition` object provided by the Spring Framework to avoid any potential input error.","Spring Framework 6 Fundamentals","Spring Scopes and Autowiring","Singleton Java Config","3:11","https://app.pluralsight.com/player?course=spring-framework-6-fundamentals&author=bryan-hansen&name=95e4c8f7-6a9d-4e9b-8cc0-bbb1ec502420&clip=2&mode=live&start=191&noteid=873cddcb-683c-4ec1-8ac0-0e572642d4ff"
"Constructor injection via XML is index-based instead of name-based.","Spring Framework 6 Fundamentals","Spring Configuration using XML","Demo: Constructor Injection","1:12","https://app.pluralsight.com/player?course=spring-framework-6-fundamentals&author=bryan-hansen&name=b2769833-7873-4fc7-b68b-08b0ef4d65d6&clip=8&mode=live&start=72&noteid=ead86992-6004-4d6b-98db-89b591463955"
"Don't abuse post-processors, should default to properly wiring through Spring especially on things such as DB connections.","Spring Framework 6 Fundamentals","Advanced Bean Configuration","Bean Lifecycle","5:32","https://app.pluralsight.com/player?course=spring-framework-6-fundamentals&author=bryan-hansen&name=b4fbc6bb-1541-4028-b647-fe81357fca62&clip=1&mode=live&start=332&noteid=246dd8f1-26a1-42dd-95cf-58710abd61b0"
"To do these profile annotations, it is necessary to go into your application settings -> add VM options -> type in `-Dspring.profiles.active=""<prof name>""`","Spring Framework 6 Fundamentals","Advanced Bean Configuration","Bean Profiles","2:35","https://app.pluralsight.com/player?course=spring-framework-6-fundamentals&author=bryan-hansen&name=b4fbc6bb-1541-4028-b647-fe81357fca62&clip=5&mode=live&start=155&noteid=2f51023d-8777-48fa-92df-9f4aac7bf5fa"